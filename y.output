Useless nonterminals

   arithmetic_expression
   additive_expression
   multiplicative_expression


Terminals which are not used

   IF_T
   ELSE_T
   FOREACH_T
   IN_T
   BREAK_T
   NL
   REL_OP
   '+'
   '-'
   '*'
   '/'
   '%'


Useless rules

   42 assignment_expression: arithmetic_expression

   43 arithmetic_expression: additive_expression
   44                      | multiplicative_expression

   45 additive_expression: additive_expression '+' multiplicative_expression
   46                    | additive_expression '-' multiplicative_expression

   47 multiplicative_expression: multiplicative_expression '*' postfix_expression
   48                          | multiplicative_expression '/' postfix_expression
   49                          | multiplicative_expression '%' postfix_expression


Grammar

    0 $accept: declarator_list $end

    1 declarator_list: declarator
    2                | declarator_list declarator

    3 declarator: primitive_declarator ';'
    4           | derived_type_declarator ';'

    5 primitive_declarator: type_specifier ID
    6                     | type_specifier ID '=' initializer

    7 derived_type_declarator: NEW_T derived_type_specifier ID

    8 initializer: assignment_expression

    9 assignment_expression: '=' postfix_expression
   10                      | boolean_expression

   11 boolean_expression: boolean_expression OR_T boolean_term
   12                   | boolean_term

   13 boolean_term: boolean_term AND_T boolean_factor
   14             | boolean_factor

   15 boolean_factor: ID
   16               | NOT_T boolean_factor
   17               | '(' boolean_expression ')'
   18               | relational_expression

   19 relational_expression: ID EQ_REL_OP ID
   20                      | ID NEQ_REL_OP ID
   21                      | ID '<' ID
   22                      | ID LEQ_REL_OP ID
   23                      | ID '>' ID
   24                      | ID GEQ_REL_OP ID

   25 argument_expression_list: assignment_expression
   26                         | argument_expression_list ',' assignment_expression

   27 postfix_expression: primary_expression
   28                   | postfix_expression '(' argument_expression_list ')'
   29                   | postfix_expression '(' ')'

   30 primary_expression: constant
   31                   | ID
   32                   | STRING_T

   33 constant: NUM

   34 type_specifier: INT_T
   35               | DOUBLE_T
   36               | TIME_T
   37               | DAY_T
   38               | derived_type_specifier

   39 derived_type_specifier: SCHEDULE_T
   40                       | COURSE_T
   41                       | COURSELIST_T


Terminals, with rules where they appear

$end (0) 0
'%' (37)
'(' (40) 17 28 29
')' (41) 17 28 29
'*' (42)
'+' (43)
',' (44) 26
'-' (45)
'/' (47)
';' (59) 3 4
'<' (60) 21
'=' (61) 6 9
'>' (62) 23
error (256)
IF_T (258)
ELSE_T (259)
NEW_T (260) 7
FOREACH_T (261)
IN_T (262)
BREAK_T (263)
SCHEDULE_T (264) 39
COURSE_T (265) 40
COURSELIST_T (266) 41
INT_T (267) 34
DOUBLE_T (268) 35
TIME_T (269) 36
DAY_T (270) 37
STRING_T (271) 32
AND_T (272) 13
OR_T (273) 11
NOT_T (274) 16
LEQ_REL_OP (275) 22
GEQ_REL_OP (276) 24
NEQ_REL_OP (277) 20
EQ_REL_OP (278) 19
ID (279) 5 6 7 15 19 20 21 22 23 24 31
NL (280)
NUM (281) 33
REL_OP (282)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
declarator_list (41)
    on left: 1 2, on right: 0 2
declarator (42)
    on left: 3 4, on right: 1 2
primitive_declarator (43)
    on left: 5 6, on right: 3
derived_type_declarator (44)
    on left: 7, on right: 4
initializer (45)
    on left: 8, on right: 6
assignment_expression (46)
    on left: 9 10, on right: 8 25 26
boolean_expression (47)
    on left: 11 12, on right: 10 11 17
boolean_term (48)
    on left: 13 14, on right: 11 12 13
boolean_factor (49)
    on left: 15 16 17 18, on right: 13 14 16
relational_expression (50)
    on left: 19 20 21 22 23 24, on right: 18
argument_expression_list (51)
    on left: 25 26, on right: 26 28
postfix_expression (52)
    on left: 27 28 29, on right: 9 28 29
primary_expression (53)
    on left: 30 31 32, on right: 27
constant (54)
    on left: 33, on right: 30
type_specifier (55)
    on left: 34 35 36 37 38, on right: 5 6
derived_type_specifier (56)
    on left: 39 40 41, on right: 7 38


state 0

    0 $accept: . declarator_list $end

    NEW_T         shift, and go to state 1
    SCHEDULE_T    shift, and go to state 2
    COURSE_T      shift, and go to state 3
    COURSELIST_T  shift, and go to state 4
    INT_T         shift, and go to state 5
    DOUBLE_T      shift, and go to state 6
    TIME_T        shift, and go to state 7
    DAY_T         shift, and go to state 8

    declarator_list          go to state 9
    declarator               go to state 10
    primitive_declarator     go to state 11
    derived_type_declarator  go to state 12
    type_specifier           go to state 13
    derived_type_specifier   go to state 14


state 1

    7 derived_type_declarator: NEW_T . derived_type_specifier ID

    SCHEDULE_T    shift, and go to state 2
    COURSE_T      shift, and go to state 3
    COURSELIST_T  shift, and go to state 4

    derived_type_specifier  go to state 15


state 2

   39 derived_type_specifier: SCHEDULE_T .

    $default  reduce using rule 39 (derived_type_specifier)


state 3

   40 derived_type_specifier: COURSE_T .

    $default  reduce using rule 40 (derived_type_specifier)


state 4

   41 derived_type_specifier: COURSELIST_T .

    $default  reduce using rule 41 (derived_type_specifier)


state 5

   34 type_specifier: INT_T .

    $default  reduce using rule 34 (type_specifier)


state 6

   35 type_specifier: DOUBLE_T .

    $default  reduce using rule 35 (type_specifier)


state 7

   36 type_specifier: TIME_T .

    $default  reduce using rule 36 (type_specifier)


state 8

   37 type_specifier: DAY_T .

    $default  reduce using rule 37 (type_specifier)


state 9

    0 $accept: declarator_list . $end
    2 declarator_list: declarator_list . declarator

    $end          shift, and go to state 16
    NEW_T         shift, and go to state 1
    SCHEDULE_T    shift, and go to state 2
    COURSE_T      shift, and go to state 3
    COURSELIST_T  shift, and go to state 4
    INT_T         shift, and go to state 5
    DOUBLE_T      shift, and go to state 6
    TIME_T        shift, and go to state 7
    DAY_T         shift, and go to state 8

    declarator               go to state 17
    primitive_declarator     go to state 11
    derived_type_declarator  go to state 12
    type_specifier           go to state 13
    derived_type_specifier   go to state 14


state 10

    1 declarator_list: declarator .

    $default  reduce using rule 1 (declarator_list)


state 11

    3 declarator: primitive_declarator . ';'

    ';'  shift, and go to state 18


state 12

    4 declarator: derived_type_declarator . ';'

    ';'  shift, and go to state 19


state 13

    5 primitive_declarator: type_specifier . ID
    6                     | type_specifier . ID '=' initializer

    ID  shift, and go to state 20


state 14

   38 type_specifier: derived_type_specifier .

    $default  reduce using rule 38 (type_specifier)


state 15

    7 derived_type_declarator: NEW_T derived_type_specifier . ID

    ID  shift, and go to state 21


state 16

    0 $accept: declarator_list $end .

    $default  accept


state 17

    2 declarator_list: declarator_list declarator .

    $default  reduce using rule 2 (declarator_list)


state 18

    3 declarator: primitive_declarator ';' .

    $default  reduce using rule 3 (declarator)


state 19

    4 declarator: derived_type_declarator ';' .

    $default  reduce using rule 4 (declarator)


state 20

    5 primitive_declarator: type_specifier ID .
    6                     | type_specifier ID . '=' initializer

    '='  shift, and go to state 22

    $default  reduce using rule 5 (primitive_declarator)


state 21

    7 derived_type_declarator: NEW_T derived_type_specifier ID .

    $default  reduce using rule 7 (derived_type_declarator)


state 22

    6 primitive_declarator: type_specifier ID '=' . initializer

    NOT_T  shift, and go to state 23
    ID     shift, and go to state 24
    '='    shift, and go to state 25
    '('    shift, and go to state 26

    initializer            go to state 27
    assignment_expression  go to state 28
    boolean_expression     go to state 29
    boolean_term           go to state 30
    boolean_factor         go to state 31
    relational_expression  go to state 32


state 23

   16 boolean_factor: NOT_T . boolean_factor

    NOT_T  shift, and go to state 23
    ID     shift, and go to state 24
    '('    shift, and go to state 26

    boolean_factor         go to state 33
    relational_expression  go to state 32


state 24

   15 boolean_factor: ID .
   19 relational_expression: ID . EQ_REL_OP ID
   20                      | ID . NEQ_REL_OP ID
   21                      | ID . '<' ID
   22                      | ID . LEQ_REL_OP ID
   23                      | ID . '>' ID
   24                      | ID . GEQ_REL_OP ID

    LEQ_REL_OP  shift, and go to state 34
    GEQ_REL_OP  shift, and go to state 35
    NEQ_REL_OP  shift, and go to state 36
    EQ_REL_OP   shift, and go to state 37
    '<'         shift, and go to state 38
    '>'         shift, and go to state 39

    $default  reduce using rule 15 (boolean_factor)


state 25

    9 assignment_expression: '=' . postfix_expression

    STRING_T  shift, and go to state 40
    ID        shift, and go to state 41
    NUM       shift, and go to state 42

    postfix_expression  go to state 43
    primary_expression  go to state 44
    constant            go to state 45


state 26

   17 boolean_factor: '(' . boolean_expression ')'

    NOT_T  shift, and go to state 23
    ID     shift, and go to state 24
    '('    shift, and go to state 26

    boolean_expression     go to state 46
    boolean_term           go to state 30
    boolean_factor         go to state 31
    relational_expression  go to state 32


state 27

    6 primitive_declarator: type_specifier ID '=' initializer .

    $default  reduce using rule 6 (primitive_declarator)


state 28

    8 initializer: assignment_expression .

    $default  reduce using rule 8 (initializer)


state 29

   10 assignment_expression: boolean_expression .
   11 boolean_expression: boolean_expression . OR_T boolean_term

    OR_T  shift, and go to state 47

    $default  reduce using rule 10 (assignment_expression)


state 30

   12 boolean_expression: boolean_term .
   13 boolean_term: boolean_term . AND_T boolean_factor

    AND_T  shift, and go to state 48

    $default  reduce using rule 12 (boolean_expression)


state 31

   14 boolean_term: boolean_factor .

    $default  reduce using rule 14 (boolean_term)


state 32

   18 boolean_factor: relational_expression .

    $default  reduce using rule 18 (boolean_factor)


state 33

   16 boolean_factor: NOT_T boolean_factor .

    $default  reduce using rule 16 (boolean_factor)


state 34

   22 relational_expression: ID LEQ_REL_OP . ID

    ID  shift, and go to state 49


state 35

   24 relational_expression: ID GEQ_REL_OP . ID

    ID  shift, and go to state 50


state 36

   20 relational_expression: ID NEQ_REL_OP . ID

    ID  shift, and go to state 51


state 37

   19 relational_expression: ID EQ_REL_OP . ID

    ID  shift, and go to state 52


state 38

   21 relational_expression: ID '<' . ID

    ID  shift, and go to state 53


state 39

   23 relational_expression: ID '>' . ID

    ID  shift, and go to state 54


state 40

   32 primary_expression: STRING_T .

    $default  reduce using rule 32 (primary_expression)


state 41

   31 primary_expression: ID .

    $default  reduce using rule 31 (primary_expression)


state 42

   33 constant: NUM .

    $default  reduce using rule 33 (constant)


state 43

    9 assignment_expression: '=' postfix_expression .
   28 postfix_expression: postfix_expression . '(' argument_expression_list ')'
   29                   | postfix_expression . '(' ')'

    '('  shift, and go to state 55

    $default  reduce using rule 9 (assignment_expression)


state 44

   27 postfix_expression: primary_expression .

    $default  reduce using rule 27 (postfix_expression)


state 45

   30 primary_expression: constant .

    $default  reduce using rule 30 (primary_expression)


state 46

   11 boolean_expression: boolean_expression . OR_T boolean_term
   17 boolean_factor: '(' boolean_expression . ')'

    OR_T  shift, and go to state 47
    ')'   shift, and go to state 56


state 47

   11 boolean_expression: boolean_expression OR_T . boolean_term

    NOT_T  shift, and go to state 23
    ID     shift, and go to state 24
    '('    shift, and go to state 26

    boolean_term           go to state 57
    boolean_factor         go to state 31
    relational_expression  go to state 32


state 48

   13 boolean_term: boolean_term AND_T . boolean_factor

    NOT_T  shift, and go to state 23
    ID     shift, and go to state 24
    '('    shift, and go to state 26

    boolean_factor         go to state 58
    relational_expression  go to state 32


state 49

   22 relational_expression: ID LEQ_REL_OP ID .

    $default  reduce using rule 22 (relational_expression)


state 50

   24 relational_expression: ID GEQ_REL_OP ID .

    $default  reduce using rule 24 (relational_expression)


state 51

   20 relational_expression: ID NEQ_REL_OP ID .

    $default  reduce using rule 20 (relational_expression)


state 52

   19 relational_expression: ID EQ_REL_OP ID .

    $default  reduce using rule 19 (relational_expression)


state 53

   21 relational_expression: ID '<' ID .

    $default  reduce using rule 21 (relational_expression)


state 54

   23 relational_expression: ID '>' ID .

    $default  reduce using rule 23 (relational_expression)


state 55

   28 postfix_expression: postfix_expression '(' . argument_expression_list ')'
   29                   | postfix_expression '(' . ')'

    NOT_T  shift, and go to state 23
    ID     shift, and go to state 24
    '='    shift, and go to state 25
    '('    shift, and go to state 26
    ')'    shift, and go to state 59

    assignment_expression     go to state 60
    boolean_expression        go to state 29
    boolean_term              go to state 30
    boolean_factor            go to state 31
    relational_expression     go to state 32
    argument_expression_list  go to state 61


state 56

   17 boolean_factor: '(' boolean_expression ')' .

    $default  reduce using rule 17 (boolean_factor)


state 57

   11 boolean_expression: boolean_expression OR_T boolean_term .
   13 boolean_term: boolean_term . AND_T boolean_factor

    AND_T  shift, and go to state 48

    $default  reduce using rule 11 (boolean_expression)


state 58

   13 boolean_term: boolean_term AND_T boolean_factor .

    $default  reduce using rule 13 (boolean_term)


state 59

   29 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 29 (postfix_expression)


state 60

   25 argument_expression_list: assignment_expression .

    $default  reduce using rule 25 (argument_expression_list)


state 61

   26 argument_expression_list: argument_expression_list . ',' assignment_expression
   28 postfix_expression: postfix_expression '(' argument_expression_list . ')'

    ')'  shift, and go to state 62
    ','  shift, and go to state 63


state 62

   28 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 28 (postfix_expression)


state 63

   26 argument_expression_list: argument_expression_list ',' . assignment_expression

    NOT_T  shift, and go to state 23
    ID     shift, and go to state 24
    '='    shift, and go to state 25
    '('    shift, and go to state 26

    assignment_expression  go to state 64
    boolean_expression     go to state 29
    boolean_term           go to state 30
    boolean_factor         go to state 31
    relational_expression  go to state 32


state 64

   26 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 26 (argument_expression_list)
