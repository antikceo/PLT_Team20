   0  $accept : declarator_list $end

   1  declarator_list : declarator_list primitive_declarator
   2                  | primitive_declarator

   3  primitive_declarator : type_specifier ID ';'
   4                       | type_specifier ID '=' constant ';'

   5  constant : INT_NUM
   6           | DOUBLE_NUM

   7  type_specifier : INT_T
   8                 | DOUBLE_T

state 0
	$accept : . declarator_list $end  (0)

	INT_T  shift 1
	DOUBLE_T  shift 2
	.  error

	declarator_list  goto 3
	primitive_declarator  goto 4
	type_specifier  goto 5


state 1
	type_specifier : INT_T .  (7)

	.  reduce 7


state 2
	type_specifier : DOUBLE_T .  (8)

	.  reduce 8


state 3
	$accept : declarator_list . $end  (0)
	declarator_list : declarator_list . primitive_declarator  (1)

	$end  accept
	INT_T  shift 1
	DOUBLE_T  shift 2
	.  error

	primitive_declarator  goto 6
	type_specifier  goto 5


state 4
	declarator_list : primitive_declarator .  (2)

	.  reduce 2


state 5
	primitive_declarator : type_specifier . ID ';'  (3)
	primitive_declarator : type_specifier . ID '=' constant ';'  (4)

	ID  shift 7
	.  error


state 6
	declarator_list : declarator_list primitive_declarator .  (1)

	.  reduce 1


state 7
	primitive_declarator : type_specifier ID . ';'  (3)
	primitive_declarator : type_specifier ID . '=' constant ';'  (4)

	';'  shift 8
	'='  shift 9
	.  error


state 8
	primitive_declarator : type_specifier ID ';' .  (3)

	.  reduce 3


state 9
	primitive_declarator : type_specifier ID '=' . constant ';'  (4)

	INT_NUM  shift 10
	DOUBLE_NUM  shift 11
	.  error

	constant  goto 12


state 10
	constant : INT_NUM .  (5)

	.  reduce 5


state 11
	constant : DOUBLE_NUM .  (6)

	.  reduce 6


state 12
	primitive_declarator : type_specifier ID '=' constant . ';'  (4)

	';'  shift 13
	.  error


state 13
	primitive_declarator : type_specifier ID '=' constant ';' .  (4)

	.  reduce 4


35 terminals, 5 nonterminals
9 grammar rules, 14 states
